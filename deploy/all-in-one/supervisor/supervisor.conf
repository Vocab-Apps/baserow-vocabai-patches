[supervisord]
nodaemon = true
logfile=/dev/stdout
logfile_maxbytes=0
environment =

[include]
files = /baserow/supervisor/includes/enabled/*.conf

[program:caddy]
user=%(ENV_BASEROW_CADDY_USER)s
directory=%(ENV_DATA_DIR)s/caddy
command=/baserow/supervisor/wrapper.sh PURPLE CADDY /usr/bin/caddy run --config "/baserow/caddy/Caddyfile"
autostart=true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
priority=0
environment= XDG_CONFIG_HOME=%(ENV_DATA_DIR)s/caddy/config, XDG_DATA_HOME=%(ENV_DATA_DIR)s/caddy/data
startretries=3
startsecs=30

[program:webfrontend]
user=%(ENV_DOCKER_USER)s
directory=/baserow/web-frontend
command=/baserow/supervisor/wrapper.sh YELLOW WEBFRONTEND ./docker/docker-entrypoint.sh %(ENV_BASEROW_WEB_FRONTEND_STARTUP_COMMAND)s
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=10
startretries=3
startsecs=30

[program:backend]
user=%(ENV_DOCKER_USER)s
directory=/baserow/backend
command=/baserow/supervisor/wrapper.sh BLUE BACKEND ./docker/docker-entrypoint.sh %(ENV_BASEROW_BACKEND_STARTUP_COMMAND)s
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=2
startretries=3
startsecs=30

[program:celeryworker]
user=%(ENV_DOCKER_USER)s
directory=/baserow/backend
command=/baserow/supervisor/wrapper.sh CYAN CELERY_WORKER ./docker/docker-entrypoint.sh %(ENV_BASEROW_CELERY_WORKER_STARTUP_COMMAND)s
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=2
startretries=3
startsecs=30

[program:celerycltworker]
user=%(ENV_DOCKER_USER)s
directory=/baserow/backend
command=/baserow/supervisor/wrapper.sh CYAN CLT_WORKER ./docker/docker-entrypoint.sh %(ENV_BASEROW_CELERY_CLT_WORKER_STARTUP_COMMAND)s
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=2
startretries=3
startsecs=30

[program:exportworker]
user=%(ENV_DOCKER_USER)s
directory=/baserow/backend
command=/baserow/supervisor/wrapper.sh CYAN EXPORT_WORKER ./docker/docker-entrypoint.sh %(ENV_BASEROW_CELERY_EXPORT_WORKER_STARTUP_COMMAND)s
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=2
startretries=3
startsecs=30

[program:beatworker]
user=%(ENV_DOCKER_USER)s
directory=/baserow/backend
command=/baserow/supervisor/wrapper.sh CYAN BEAT_WORKER ./docker/docker-entrypoint.sh %(ENV_BASEROW_CELERY_BEAT_STARTUP_COMMAND)s
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=100
startretries=3
# Ensure this is higher than CELERY_REDBEAT_LOCK_TIMEOUT as when starting up beat might
# be blocked waiting to get the lock as it times out.
startsecs=100
# See https://github.com/sibson/redbeat/issues/129#issuecomment-1057478237
stopsignal=QUIT

[program:baserow-watcher]
user=%(ENV_DOCKER_USER)s
command=/baserow/supervisor/wrapper.sh BOLD BASEROW-WATCHER /baserow/supervisor/baserow-watcher.sh
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
autostart=true
priority=0

# If an application crashes during runtime we want the entire container to die.
[eventlistener:processes]
command=/baserow/supervisor/stop-supervisor.sh
events=PROCESS_STATE_STOPPED,PROCESS_STATE_EXITED,PROCESS_STATE_FATAL
stderr_logfile=/dev/stdout
stderr_logfile_maxbytes=0
